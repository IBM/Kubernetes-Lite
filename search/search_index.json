{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Kubernetes Lite","text":"<p>Kubernetes Lite is a \"liteweight\" wrapper around various golang Kubernetes libraries using gopy. It brings the benefits of go's resource efficiency plus the feature set of packages like client-go and the controller-runtime to Python. </p>"},{"location":"#documentation","title":"Documentation","text":"<p>Get going with our examples page or jump into more details with our API Reference!</p>"},{"location":"#installation","title":"Installation","text":"<p>[!WARNING] Since go 1.21 having multiple go shared objects in the same process is not supported. Thus you can not use other CGO based libraries with kubernetes-lite. If you would like to combine this package with another golang based one then please open an issue so we can discuss possible solutions.</p> <p>Kubernetes Lite provides precompiled both x86 and arm wheels for Linux and MacOS. You can install the package with the standard <code>pip install</code></p> <pre><code>pip3 install kubernetes_lite\n</code></pre>"},{"location":"#source-installation","title":"Source Installation","text":"<p>To install Kubernetes Lite from source, you must install golang 1.23. You should then let setup-tools/pip install the package like normal.</p> <pre><code>pip3 install --no-binary \"kubernetes_lite\" kubernetes_lite\n</code></pre>"},{"location":"#dynamic-client","title":"Dynamic Client","text":"<p>Kubernetes Lite exposes client-go's dynamic client, which, on average, is 20% faster and uses half the memory than the standard Kubernetes library. It supports all of the options defined by apimachinery in both their JSON and camelCase formats. See the examples folder for a recreation of client-go's own dynamic example.</p> <p>In addition to the usage example you can check out the Api Reference for a detailed description of all methods and options.</p> <pre><code>from kubernetes_lite.client import DynamicClient\n\n# Construct a client using https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/client/config#GetConfig\nclient = DynamicClient()\n# List all deployments in a cluster\nclient.resource(\"apps/v1\",\"Deployment\").list()\n</code></pre> <p>The following graphs highlight the speed and efficiency of the dynamic client. One caveat is that the \"20%\" runtime improvement is on top of a fast standard client. The official client is only 1-3ms behind Kubernetes Lite, which would not impact a networked client where network latencies usually are much higher than 1ms. The real benefit of Kubernetes Lite's resource efficiency is startup time. If you have a simple script that needs to be run at frequent intervals, the startup save of 300ms can be impactful.</p> <p> </p>"},{"location":"#envtest","title":"EnvTest","text":"<p>To aid in testing all Python Kubernetes libraries, Kubernetes Lite also provides bindings to the controller-runtime's envtest package. This allows you to start a local control plane without needing a container runtime, which provides users real API server to test against, replacing the need for complicated \"mock\" clients and servers. As shown in our examples folder, these bindings and pytest fixtures work with any Kubernetes client, including the official one.</p> <pre><code># Import standard Kubernetes client\nfrom kubernetes import client, config\n# Import Kubernetes Lite Fixture\nfrom kubernetes_lite.envtest.pytest import session_kubernetes_env, EnvTest\n\ndef test_kubernetes_core_api(session_kubernetes_env: EnvTest):\n    \"\"\"Test that kubernetes core api works with envtest\"\"\"\n    config.load_config(config_file=session_kubernetes_env.config())\n\n    v1 = client.CoreV1Api()\n    print(\"Listing pods with their IPs:\")\n    ret = v1.list_pod_for_all_namespaces(watch=False)\n    for i in ret.items:\n        print(f\"{i.status.pod_ip}\\t{i.metadata.namespace}\\t{i.metadata.name}\")\n</code></pre> <p>The <code>EnvTest</code> class was designed to be compatible with the controller-runtime version. It uses the same environmental configuration as go with support for envvars like <code>KUBEBUILDER_ASSETS</code> and <code>USE_EXISTING_CLUSTER</code>. For a complete guide to envtest checkout the controller-runtimes Configuring Envtest guide. The code snippets will be different; instead of <code>setup-envtest</code>, it will be <code>python3 -m kubernetes_lite.setup_envtest</code>, but the guide is still applicable.</p>"},{"location":"#setup-envtest","title":"Setup EnvTest","text":"<p>Along with envtest, Kubernetes Lite wraps it's helper script setup-envtest. This script is automatically called when starting an <code>EnvTest</code> instance but it can also be invoked manually with <code>python3 -m kubernetes_lite.setup_envtest</code>. It has the exact same options and use as the go version.</p> <pre><code>\u276f python3 -m kubernetes_lite.setup_envtest use\nVersion: 1.32.0\nOS/Arch: darwin/amd64\nsha512: a7824ff8ae9c5062bcbde243a7a3a1c76e02de0c92e2b332daf1954405aeded856023f277d74197862d0d5909e9e1dca451b5f2e84796e451ad6011ec98f8433\nPath: /Users/michaelhonaker/Library/Application Support/io.kubebuilder.envtest/k8s/1.32.0-darwin-amd64\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Check out our contributing guide to learn how to contribute to Kubernetes Lite.</p>"},{"location":"#code-of-conduct","title":"Code of Conduct","text":"<p>Participation in Kubernetes Lite is governed by our Code of Conduct.</p>"},{"location":"api_references/","title":"API References","text":""},{"location":"api_references/#kubernetes_lite","title":"<code>kubernetes_lite</code>","text":"<p>Kubernetes_lite is a lightweight wrapper around the dynamic client from k8s.io/client-go/dynamic, the 'mock' kubernetes server from sigs.k8s.io/controller-runtime/pkg/envtest, and its helper tool setup-envtest https://pkg.go.dev/sigs.k8s.io/controller-runtime/tools/setup-envtest</p>"},{"location":"api_references/#kubernetes_lite.client","title":"<code>kubernetes_lite.client</code>","text":"<p>This module contains a simple pythonic wrapper around the k8s.io/client-go/dynamic DynamicClient.</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicClient","title":"<code>DynamicClient</code>","text":"<p>DynamicClient is the top level client and generic controls settings like authentication, rate limiting, and timeouts. Use the .resource method to create a DynamicResource which can be used to interact with the cluster.</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicClient.resources","title":"<code>resources</code>  <code>cached</code> <code>property</code>","text":"<p>Return the client's Discover object. It's preferred to use the resource() function instead of accessing this directly</p> <p>Returns:</p> Name Type Description <code>Discoverer</code> <code>Discoverer</code> <p>The discover used in created DynamicResources</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicClient.__init__","title":"<code>__init__(config=None, qps=-1, burst=100, timeout='', **kwargs)</code>","text":"<p>Initialize the dynamic client with optional overrides</p> <p>Parameters:</p> Name Type Description Default <code>config</code> <code>bytes | BytesIO | None</code> <p>The raw kube_config data to initialize the client with. Defaults to controller-runtime's GetConfig. See https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/client/config#GetConfig for more information.</p> <code>None</code> <code>qps</code> <code>float</code> <p>QPS to set for the client. See https://pkg.go.dev/k8s.io/client-go/rest#Config for more information. Defaults to -1 which means rate-limiting is disabled.</p> <code>-1</code> <code>burst</code> <code>int</code> <p>How many requests can the client burst to. See https://pkg.go.dev/k8s.io/client-go/rest#Config for more information. Defaults to 100.</p> <code>100</code> <code>timeout</code> <code>timedelta | str</code> <p>Timeout value for the client. If a string is provided check https://pkg.go.dev/time#ParseDuration for parsing information. Defaults to \"\" or no timeout.</p> <code>''</code> <code>**kwargs</code> <p>Unused kwargs for backwards compatibility with kubernetes library</p> <code>{}</code>"},{"location":"api_references/#kubernetes_lite.client.DynamicClient.resource","title":"<code>resource(api_version, kind)</code>","text":"<p>Return a DynamicResource for the given api_version and kind. This DynamicResource can then be used to interact with the cluster.</p> <p>Parameters:</p> Name Type Description Default <code>api_version</code> <code>str</code> <p>The api_version for the resource handle</p> required <code>kind</code> <code>str</code> <p>The kind for the resource handle</p> required <p>Returns:</p> Name Type Description <code>DynamicResource</code> <code>DynamicResource</code> <p>The DynamicResource handle for the requested type</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource","title":"<code>DynamicResource</code>","text":"<p>DynamicResource is the primary client for interacting with resources on the cluster. It's functions mirror the ResourceInterface provided by https://pkg.go.dev/k8s.io/client-go/dynamic#ResourceInterface. The parameters to the various functions map to the json names of the Options objects in https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1. For example <code>list()</code> parameter's map to ListOptions</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.__init__","title":"<code>__init__(resource)</code>","text":"<p>Create a DynamicResource which points to a WrappedNamespaceableResourceInterface from go. This class should not be initialized directly and should instead be created by the client/discoverer</p> <p>Parameters:</p> Name Type Description Default <code>resource</code> <code>WrappedNamespaceableResourceInterface</code> <p>The WrappedNamespaceableResourceInterface to wrap</p> required"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.apply","title":"<code>apply(resource, name=None, namespace=None, dry_run=None, field_manager=None, force=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Apply an object in the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#ApplyOptions. See https://kubernetes.io/docs/reference/using-api/server-side-apply/ for more information</p> <p>Parameters:</p> Name Type Description Default <code>resource</code> <code>SourceObjectType</code> <p>The resource to deploy</p> required <code>name</code> <code>str | None</code> <p>Optional name for the resource. Defaults to None or name in the provided resources.</p> <code>None</code> <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None or namespace in the provided resources.</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>field_manager</code> <code>str | None</code> <p>Optional field manager string to use to manage resource fields. Defaults to None.</p> <code>None</code> <code>force</code> <code>bool | None</code> <p>If the patch should be forced ignoring field_manager. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more ApplyOptions parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The applied object from the cluster in a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.apply_status","title":"<code>apply_status(resource, name=None, namespace=None, dry_run=None, field_manager=None, force=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Apply a status object in the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#ApplyOptions. See https://kubernetes.io/docs/reference/using-api/server-side-apply/ for more information</p> <p>Parameters:</p> Name Type Description Default <code>resource</code> <code>SourceObjectType</code> <p>The resource to deploy</p> required <code>name</code> <code>str | None</code> <p>Optional name for the resource. Defaults to None or name in the provided resources.</p> <code>None</code> <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None or namespace in the provided resources.</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>field_manager</code> <code>str | None</code> <p>Optional field manager string to use to manage resource fields. Defaults to None.</p> <code>None</code> <code>force</code> <code>bool | None</code> <p>If the patch should be forced ignoring field_manager. Defaults to None.</p> <code>None</code> <code>field_validation</code> <code>str | None</code> <p>Optional fieldValidation instructs the server on how to handle objects in the request containing unknown or duplicate fields. Defaults to None.</p> required <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more ApplyOptions parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The applied object from the cluster in a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.create","title":"<code>create(resource, namespace=None, dry_run=None, field_manager=None, field_validation=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Create an object in the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#CreateOptions</p> <p>Parameters:</p> Name Type Description Default <code>resource</code> <code>SourceObjectType</code> <p>The resource to deploy</p> required <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None or namespace in the provided resources.</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>field_manager</code> <code>str | None</code> <p>Optional field manager string to use to manage resource fields. Defaults to None.</p> <code>None</code> <code>field_validation</code> <code>str | None</code> <p>Optional fieldValidation instructs the server on how to handle objects in the request containing unknown or duplicate fields. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more CreateOption parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The created object from the cluster in a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.delete","title":"<code>delete(name, namespace=None, grace_period_seconds=None, propagation_policy=None, dry_run=None, ignore_store_read_error=None, extra_options_kwargs=None, **kwargs)</code>","text":"<p>Delete an object from the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#DeleteOptions.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Name for the resource to delete.</p> required <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>grace_period_seconds</code> <code>int | None</code> <p>Optional time to wait for graceful termination before deleting the resource. Defaults to None.</p> <code>None</code> <code>propagation_policy</code> <code>str | None</code> <p>Optional DeletionPropagation decides how a deletion propagates to dependents of the object. See https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#DeletionPropagation for more information. Defaults to None.</p> <code>None</code> <code>ignore_store_read_error</code> <code>bool | None</code> <p>Optional override to force successful deletion even if there is an etcd store error. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more DeleteOptions parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> required <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.delete_collection","title":"<code>delete_collection(namespace=None, grace_period_seconds=None, propagation_policy=None, dry_run=None, limit=None, resource_version=None, resource_version_match=None, label_selector=None, field_selector=None, timeout=None, ignore_store_read_error=None, extra_delete_options_kwargs=None, extra_list_options_kwargs=None, **kwargs)</code>","text":"<p>Delete a collection of objects from the cluster. The parameters map to both https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#DeleteOptions and  https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#ListOptions</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Name for the resource to delete.</p> required <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>grace_period_seconds</code> <code>int | None</code> <p>Optional time to wait for graceful termination before deleting the resource. Defaults to None.</p> <code>None</code> <code>propagation_policy</code> <code>str | None</code> <p>Optional DeletionPropagation decides how a deletion propagates to dependents of the object. See https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#DeletionPropagation for more information. Defaults to None.</p> <code>None</code> <code>ignore_store_read_error</code> <code>bool | None</code> <p>Optional override to force successful deletion even if there is an etcd store error. Defaults to None.</p> <code>None</code> <code>extra_delete_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more DeleteOptions parameters. Defaults to None.</p> <code>None</code> <code>resource_version</code> <code>str | None</code> <p>Optional resourceVersion to fetch. Maps to the resourceVersion of the ObjectList object. Defaults to None.</p> <code>None</code> <code>resource_version_match</code> <code>str | None</code> <p>Optional regex string for filtering returned resources. Defaults to None.</p> <code>None</code> <code>label_selector</code> <code>str | None</code> <p>Optional label selector to filter returned resources. Defaults to None.</p> <code>None</code> <code>field_selector</code> <code>str | None</code> <p>Optional field selector to filter returned resources. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>int | None</code> <p>Optional server timeout for the request. Defaults to None.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>Optional max number of resources returned. Defaults to None.</p> <code>None</code> <code>extra_list_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more ListOption parameters. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.get","title":"<code>get(name=None, namespace=None, resource_version=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Get an object from the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#GetOptions</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str | None</code> <p>The name of the resource to fetch. None is Deprecated. Defaults to None.</p> <code>None</code> <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None.</p> <code>None</code> <code>resource_version</code> <code>str | None</code> <p>Optional resourceVersion to fetch. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more GetOption parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The object from the cluster as a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.list","title":"<code>list(namespace=None, limit=None, resource_version=None, resource_version_match=None, label_selector=None, field_selector=None, timeout=None, continue_req=None, extra_options_kwargs=None, **kwargs)</code>","text":"<p>List an object from the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#ListOptions</p> <p>Parameters:</p> Name Type Description Default <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None.</p> <code>None</code> <code>resource_version</code> <code>str | None</code> <p>Optional resourceVersion to fetch. Maps to the resourceVersion of the ObjectList object. Defaults to None.</p> <code>None</code> <code>resource_version_match</code> <code>str | None</code> <p>Optional regex string for filtering returned resources. Defaults to None.</p> <code>None</code> <code>label_selector</code> <code>str | None</code> <p>Optional label selector to filter returned resources. Defaults to None.</p> <code>None</code> <code>field_selector</code> <code>str | None</code> <p>Optional field selector to filter returned resources. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>int | None</code> <p>Optional server timeout for the request. Defaults to None.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>Optional max number of resources returned. Defaults to None.</p> <code>None</code> <code>continue_req</code> <code>str | None</code> <p>Optional continue token to use to iterate over more results. Used with limit keywarg. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more ListOption parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Optional subresource of an object to get. Defaults to None.</p> required <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The ObjectList object from the cluster as a dictionary e.g. use <code>.get(\"items\")</code> to get list of resources</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.patch","title":"<code>patch(name, patch_type, patch_data, namespace=None, dry_run=None, field_manager=None, field_validation=None, force=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Patch an object in the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#PatchOptions</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Name of the object to patch</p> required <code>patch_type</code> <code>str</code> <p>Type of patch to use. See https://pkg.go.dev/k8s.io/apimachinery/pkg/types#PatchType for available options</p> required <code>patch_data</code> <code>SourceObjectType</code> <p>The raw patch data to use</p> required <code>resource</code> <code>SourceObjectType</code> <p>The resource to deploy</p> required <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None or namespace in the provided resources.</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>field_manager</code> <code>str | None</code> <p>Optional field manager string to use to manage resource fields. Defaults to None.</p> <code>None</code> <code>force</code> <code>bool | None</code> <p>If the patch should be forced ignoring field_manager. Defaults to None.</p> <code>None</code> <code>field_validation</code> <code>str | None</code> <p>Optional fieldValidation instructs the server on how to handle objects in the request containing unknown or duplicate fields. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more PatchOptions parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The patched object from the cluster in a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.update","title":"<code>update(resource, namespace=None, dry_run=None, field_manager=None, field_validation=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Update an object in the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#UpdateOptions</p> <p>Parameters:</p> Name Type Description Default <code>resource</code> <code>SourceObjectType</code> <p>The resource to deploy</p> required <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None or namespace in the provided resources.</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>field_manager</code> <code>str | None</code> <p>Optional field manager string to use to manage resource fields. Defaults to None.</p> <code>None</code> <code>field_validation</code> <code>str | None</code> <p>Optional fieldValidation instructs the server on how to handle objects in the request containing unknown or duplicate fields. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more CreateOption parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The updated object from the cluster in a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.update_status","title":"<code>update_status(resource, namespace=None, dry_run=None, field_manager=None, field_validation=None, extra_options_kwargs=None, subresources=None, **kwargs)</code>","text":"<p>Update the status object in the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#UpdateOptions</p> <p>Parameters:</p> Name Type Description Default <code>resource</code> <code>SourceObjectType</code> <p>The resource to deploy</p> required <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None or namespace in the provided resources.</p> <code>None</code> <code>dry_run</code> <code>list[str] | None</code> <p>Optional List of string dryrruns to use. Valid values can be gathered from the golang docs. Defaults to None.</p> <code>None</code> <code>field_manager</code> <code>str | None</code> <p>Optional field manager string to use to manage resource fields. Defaults to None.</p> <code>None</code> <code>field_validation</code> <code>str | None</code> <p>Optional fieldValidation instructs the server on how to handle objects in the request containing unknown or duplicate fields. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more CreateOption parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Subresource of an object to get. Defaults to None.</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The updated object from the cluster in a dictionary</p>"},{"location":"api_references/#kubernetes_lite.client.DynamicResource.watch","title":"<code>watch(namespace=None, resource_version=None, resource_version_match=None, label_selector=None, field_selector=None, timeout=None, limit=None, continue_req=None, extra_options_kwargs=None, watcher=None, **kwargs)</code>","text":"<p>Watch for events from the cluster. The parameters map to https://pkg.go.dev/k8s.io/apimachinery/pkg/apis/meta/v1#WatchOptions</p> <p>Parameters:</p> Name Type Description Default <code>namespace</code> <code>str | None</code> <p>Optional namespace for the resource. Defaults to None.</p> <code>None</code> <code>resource_version</code> <code>str | None</code> <p>Optional resourceVersion to fetch. Maps to the resourceVersion of the ObjectList object. Defaults to None.</p> <code>None</code> <code>resource_version_match</code> <code>str | None</code> <p>Optional regex string for filtering returned resources. Defaults to None.</p> <code>None</code> <code>label_selector</code> <code>str | None</code> <p>Optional label selector to filter returned resources. Defaults to None.</p> <code>None</code> <code>field_selector</code> <code>str | None</code> <p>Optional field selector to filter returned resources. Defaults to None.</p> <code>None</code> <code>timeout</code> <code>int | None</code> <p>Optional server timeout for the request. Defaults to None.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>Optional max number of resources returned. Defaults to None.</p> <code>None</code> <code>continue_req</code> <code>str | None</code> <p>Optional continue token to use to iterate over more results. Used with limit keywarg. Defaults to None.</p> <code>None</code> <code>extra_options_kwargs</code> <code>dict[str, Any] | None</code> <p>Optional dictionary containing more ListOption parameters. Defaults to None.</p> <code>None</code> <code>subresources</code> <code>list[str] | None</code> <p>Optional subresource of an object to get. Defaults to None.</p> required <code>watcher</code> <code>Watch | None</code> <p>Optional Watch object to use as the watcher interface. Users can use this to stop the event stream during or outside of iteration</p> <code>None</code> <code>**kwargs</code> <p>Unused kwargs for compatibility</p> <code>{}</code> <p>Returns:</p> Name Type Description <code>dict</code> <code>Watch</code> <p>The ObjectList object from the cluster as a dictionary e.g. use <code>.get(\"items\")</code> to get list of resources</p>"},{"location":"api_references/#kubernetes_lite.client.Watch","title":"<code>Watch</code>","text":"<p>Watch is an iterator that yields events streamed from the cluster</p>"},{"location":"api_references/#kubernetes_lite.client.Watch.__init__","title":"<code>__init__(interface=None)</code>","text":"<p>Initialize the Watch instance with a given wrapped interface</p> <p>Parameters:</p> Name Type Description Default <code>interface</code> <code>WrappedWatchInterface | None</code> <p>The interface to yield events from. Defaults to None.</p> <code>None</code>"},{"location":"api_references/#kubernetes_lite.client.Watch.__iter__","title":"<code>__iter__()</code>","text":"<p>Complete implementation of a python iterator</p> <p>Returns:</p> Name Type Description <code>Watch</code> <code>Watch</code> <p>Itself to iterate</p>"},{"location":"api_references/#kubernetes_lite.client.Watch.__next__","title":"<code>__next__()</code>","text":"<p>Return the next event from the cluster. These events are dictionaries in the format of json encoded apimachinery Events. You can find more information here: https://pkg.go.dev/k8s.io/apimachinery/pkg/watch#Event</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>The event data</p>"},{"location":"api_references/#kubernetes_lite.client.Watch.stop","title":"<code>stop()</code>","text":"<p>Stop streaming events from the cluster</p>"},{"location":"api_references/#kubernetes_lite.envtest","title":"<code>kubernetes_lite.envtest</code>","text":"<p>This module contains a pythonic wrapper around the https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/envtest EnvTest object</p>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest","title":"<code>EnvTest</code>","text":"<p>EnvTest is a wrapper around the golang EnvTest object provided by https://pkg.go.dev/sigs.k8s.io/controller-runtime/pkg/envtest. This class exposes methods to start and stop the server as well as fetch a raw kubeconfig or client object. This class can also handle calling setup-envtest to download the required binaries and create the path.</p> <p>To configure the underyling golang EnvTestEnvironment checkout the environmental variables exposed by EnvTest: https://book.kubebuilder.io/reference/envtest.html#environment-variables</p>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest.env","title":"<code>env</code>  <code>cached</code> <code>property</code>","text":"<p>Return the underlying golang EnvTestEnvironment object. Must be called after starting the server</p> <p>Returns:</p> Name Type Description <code>EnvTestEnvironment</code> <code>EnvTestEnvironment</code> <p>The underlying golang object for this instance</p>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest.__init__","title":"<code>__init__(log=None)</code>","text":"<p>Initialize the EnvTest object and create an event to ensure the server isn't shutdown multiple times</p> <p>Parameters:</p> Name Type Description Default <code>log</code> <code>logger | None</code> <p>Optional logger to provide. Defaults to None</p> <code>None</code>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest.client","title":"<code>client()</code>","text":"<p>Fetch a dynamic client object for interacting with the EnvTest server. Must be called after start()</p> <p>Returns:</p> Name Type Description <code>DynamicClient</code> <code>DynamicClient</code> <p>A client to interact with the server</p>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest.config","title":"<code>config()</code>","text":"<p>Fetch a kubeconfig object for the given EnvTest server. Must be called after start()</p> <p>Returns:</p> Name Type Description <code>BytesIO</code> <code>BytesIO</code> <p>The raw byte stream of the kube object</p>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest.start","title":"<code>start(auto_setup=True)</code>","text":"<p>Construct and start the EnvTestEnvironment object. Can optionally run setupenv-test to download the correct kube bins.</p> <p>Parameters:</p> Name Type Description Default <code>auto_setup</code> <code>bool</code> <p>If setup-envtest should be ran to fetch the local path. Defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>BytesIO</code> <code>BytesIO</code> <p>A raw kube_config for interacting with the cluster.</p>"},{"location":"api_references/#kubernetes_lite.envtest.EnvTest.stop","title":"<code>stop()</code>","text":"<p>Stop the envtest server if it hasn't already been stopped</p>"},{"location":"api_references/#kubernetes_lite.setup_envtest","title":"<code>kubernetes_lite.setup_envtest</code>","text":"<p>This module contains functions to run setup-envtest. See https://pkg.go.dev/sigs.k8s.io/controller-runtime/tools/setup-envtest for more information regarding arguments</p>"},{"location":"api_references/#kubernetes_lite.setup_envtest.internal_run_setup_envtest_command","title":"<code>internal_run_setup_envtest_command(*args, stdin=b'')</code>","text":"<p>This function runs the underlying setup_envtest command with a provided args and stdin.</p> <p>Parameters:</p> Name Type Description Default <code>*args</code> <code>list[str]</code> <p>The arguments to pass to setup-envtest</p> <code>()</code> <code>stdin</code> <code>bytes</code> <p>The stdin data to send to setup-envtest. Defaults to b\"\".</p> <code>b''</code> <p>Returns:</p> Name Type Description <code>SetupEnvTestResult</code> <code>SetupEnvTestResult</code> <p>A parsed dataclass containing the returned error and captured stdout/stderr</p>"},{"location":"api_references/#kubernetes_lite.setup_envtest.run_setup_envtest_command","title":"<code>run_setup_envtest_command(log=None)</code>","text":"<p>Function to handle running the setup_envtest command as if the user ran this module directly. It handles reading from the process args/stdin and passing them to internal_run_setup_envtest_command. This function handles logging the result and exiting with the correct exit code</p> <p>Parameters:</p> Name Type Description Default <code>log</code> <code>Logger | None</code> <p>Logger to use for printing setup_envtest messages. Defaults to None.</p> <code>None</code>"},{"location":"examples/","title":"Examples","text":"File Name Short Description Link dynamic_create_update_delete_deployment.py Pythonic copy of the client-go example Documentation notebook.ipynb Jupyter Notebook walkthrough of envtest &amp; client Documentation test_kubernetes.py Pytest example using EnvTest and the official Kubernetes client Documentation"},{"location":"examples/dynamic_create_update_delete/","title":"Create, Update &amp; Delete Deployment with the Dynamic Client","text":"<p>This example is almost a direct copy of the client-go example of the same name. This demonstrates the fundamental operations for managing on Deployment resources, such as Create, List, Update and Delete using the kubernetes_lite client.</p>"},{"location":"examples/dynamic_create_update_delete/#running-this-example","title":"Running this example","text":"<p>Make sure you have a Kubernetes cluster and <code>kubectl</code> is configured:</p> <pre><code>kubectl get nodes\n</code></pre> <p>Install the kubernetes_lite package on your workstation:</p> <pre><code># Remote Install\npip3 install kubernetes_lite\n# Local Install\npip3 install -e \".\"\n</code></pre> <p>Next, download dynamic_create_update_delete_deployment.py onto your workstation and run it with your local kubeconfig file:</p> <pre><code>python3 dynamic_create_update_delete_deployment.py\n# or specify a kubeconfig file with flag\npython3 dynamic_create_update_delete_deployment.py -kubeconfig=$HOME/.kube/config\n</code></pre> <p>Running this command will execute the following operations on your cluster:</p> <ol> <li>Create Deployment: This will create a 2 replica Deployment. Verify with    <code>kubectl get pods</code>.</li> <li>Update Deployment: This will update the Deployment resource created in    previous step by setting the replica count to 1 and changing the container    image to <code>nginx:1.13</code>. You are encouraged to inspect the retry loop that    handles conflicts. Verify the new replica count and container image with    <code>kubectl describe deployment demo</code>.</li> <li>List Deployments: This will retrieve Deployments in the <code>default</code>    namespace and print their names and replica counts.</li> <li>Delete Deployment: This will delete the Deployment object and its    dependent ReplicaSet resource. Verify with <code>kubectl get deployments</code>.</li> </ol> <p>Each step is separated by an interactive prompt. You must hit the Return key to proceed to the next step. You can use these prompts as a break to take time to run <code>kubectl</code> and inspect the result of the operations executed.</p> <p>You should see an output like the following:</p> <pre><code>Creating deployment...\nCreated deployment \"demo-deployment\".\n-&gt; Press Return key to continue.\nUpdating deployment...\nUpdated deployment...\n-&gt; Press Return key to continue.\nListing deployments in namespace \"default\":\n * demo-deployment (1 replicas)\n-&gt; Press Return key to continue.\nDeleting deployment...\nDeleted deployment.\n</code></pre>"},{"location":"examples/dynamic_create_update_delete/#cleanup","title":"Cleanup","text":"<p>Successfully running this program will clean the created artifacts. If you terminate the program without completing, you can clean up the created deployment with:</p> <pre><code>kubectl delete -n default deploy demo-deployment\n</code></pre>"},{"location":"examples/dynamic_create_update_delete/#troubleshooting","title":"Troubleshooting","text":"<p>If you are getting the following error, make sure Kubernetes version of your cluster is v1.13 or higher in <code>kubectl version</code>:</p> <pre><code>    panic: the server could not find the requested resource\n</code></pre>"},{"location":"examples/notebook/","title":"Kubernetes Lite Walkthrough Via Jupyter Notebook","text":"<p>This example walks through using the kubernetes_lite library with a jupyer notebook. In addition to the client operations described above, this notebook also showcases using <code>envtest</code> to start a cluster.</p>"},{"location":"examples/notebook/#running-this-example","title":"Running this example","text":"<p>Install jupyter notebook and kubernetes_lite package on your workstation:</p> <pre><code># Jupyter Install\npip3 install jupyter\n# Remote Kubernetes Lite Install\npip3 install kubernetes_lite\n# Local Kubernetes Lite Install\npip3 install -e \".\"\n</code></pre> <p>Start an instance of jupyter notebook.</p> <pre><code>python3 -m jupyter notebook\n</code></pre> <p>Download the notebook.ipynb file to the same local directory you started jupyter notebook in.</p> <p>Execute the cells in the notebook from top to bottom. There is no need for a cluster connection since this notebook will handle starting an envtest instance </p>"},{"location":"examples/notebook/#troubleshooting","title":"Troubleshooting","text":"<p>If you are getting the following error, make sure Kubernetes version of your cluster is v1.13 or higher in <code>kubectl version</code>:</p> <pre><code>kubernetes_lite.errors.UnknownError: no matches for kind \"deployment\" in version \"apps/v1\"\n</code></pre> <p>If you are getting the following error, the try to download the envtest binaries before running the example e.g. <code>python3 -m kubernetes_lite.setup_envtest use</code></p> <pre><code>RuntimeError: unable to start control plane itself: failed to start the controlplane. retried 5 times: fork/exec etcd: no such file or directory\n</code></pre>"},{"location":"examples/notebook/#cleanup","title":"Cleanup","text":"<p>Successfully running this program will correctly stop the envtest server. If you terminate the program without completing, or an error occurs you can  ensure all envtest subprocesses have been killed with:</p> <pre><code>pkill -9 -f \"kubebuilder\"\n</code></pre>"},{"location":"examples/test_kubernetes/","title":"Pytest Example using EnvTest and the Official Kubernetes Python Client","text":"<p>This example walks through using the EnvTest module with pytest to test the official kubernetes library. This example showcases using both the kubernetes CoreV1Api and DynamicClient classes with envtest</p>"},{"location":"examples/test_kubernetes/#running-this-example","title":"Running this example","text":"<p>Install kubernetes_lite, kubernetes, and pytest on your local machine</p> <pre><code># Kubernetes Install\npip3 install kubernetes\n# Pytest Install\npip3 install pytest\n# Remote Kubernetes Lite Install\npip3 install kubernetes_lite\n# Local Kubernetes Lite Install\npip3 install -e \".\"\n</code></pre> <p>Download the test_kubernetes.py example file.</p> <p>Run pytest against this example</p> <pre><code>python3 -m pytest test_kubernetes.py\n</code></pre> <p>You should see the following output from pytest:</p> <pre><code>\u276f python3 -m pytest test_kubernetes.py\n=============================================== test session starts ===============================================\nplatform darwin -- Python 3.11.5, pytest-8.3.2, pluggy-1.5.0\nrootdir: &lt;&gt;\nconfigfile: pyproject.toml\nplugins: cov-5.0.0, anyio-4.8.0, typeguard-2.13.3, timeout-2.3.1\ncollected 2 items                                                                                                 \n\ntest_kubernetes.py ..                                                                              [100%]\n\n================================================ 2 passed in 5.17s ================================================\n</code></pre>"},{"location":"examples/test_kubernetes/#troubleshooting","title":"Troubleshooting","text":"<p>If you are getting the following error, the try to download the envtest binaries before running the example e.g. <code>python3 -m kubernetes_lite.setup_envtest use</code></p> <pre><code>RuntimeError: unable to start control plane itself: failed to start the controlplane. retried 5 times: fork/exec etcd: no such file or directory\n</code></pre>"},{"location":"examples/test_kubernetes/#cleanup","title":"Cleanup","text":"<p>Successfully running this program will correctly stop the envtest server. If you terminate the program without completing, or an error occurs you can  ensure all envtest subprocesses have been killed with:</p> <pre><code>pkill -9 -f \"kubebuilder\"\n</code></pre>"}]}